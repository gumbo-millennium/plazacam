plugins {
    // Apply the Java plugin
    id 'java'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    // Apply the Maven Publishing plugin to publish the CLI application to Maven.
    id 'maven-publish'
    // Apply the Lombok plugin to generate Lombok-annotated classes.
    id "io.freefair.lombok" version "6.5.0.2"
}

group = 'nl.gumbomillennium'
sourceCompatibility = '11'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

publishing {
    repositories {
        // Use GitHub Packages repository for publishing
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/gumbo-millennium/plazacam")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

dependencies {
    // Use opencv bindings for camera access
    implementation group: 'org.openpnp', name: 'opencv', version: '4.5.1-2'

    // Use JSON package
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // Add slf4j and logback for logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.11'

    // Use OkHttp for HTTP requests
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'nl.gumbomillennium.plazacam.Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Enable Build Scanâ„¢ to work
if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}
