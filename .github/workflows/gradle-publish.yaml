# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
# This workflow will build a package using Gradle and then publish it to GitHub
# packages when a release is created For more information see:
# https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  pull_request:
  push:
    branches:
      - develop
      - main
  release:
    types:
      - created

jobs:
  build:
    name: Build Gradle Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout application
      uses: actions/checkout@v3

    - name: Setup Java 11
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Execute Gradle build
      run: ./gradlew build --scan --no-daemon

    - name: Upload build reports
      uses: actions/upload-artifact@v3
      with:
        name: build-reports
        path: build/reports/

    # Release the package as a build artifact, if it's not an actual release.
    - name: Upload build package
      if: ${{ github.event_name != 'release' }}
      uses: actions/upload-artifact@v3
      with:
        name: plazacam.jar
        path: build/libs/plazacam.jar
        retention-days: 7

    # Copy the release to a filename to attach to our release
    - name: Rename result asset
      if: ${{ github.event_name == 'release' }}
      run: cp "build/libs/plazacam.jar" "build/libs/plazacam-${{ github.event.release.tag_name }}.jar"

    # Attach the file to the release
    - name: Attach build to release
      uses: softprops/action-gh-release@v1
      if: ${{ github.event_name == 'release' }}
      with:
        fail_on_unmatched_files: true
        files: build/libs/plazacam-${{ github.event.release.tag_name }}.jar

    # Build the package again, but for GitHub Packages
    - name: Publish to GitHub Packages (only on release)
      if: ${{ github.event_name == 'release' }}
      uses: gradle/gradle-build-action@v2
      with:
        arguments: publish -Pversion=${{ github.event.release.tag_name }}
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
